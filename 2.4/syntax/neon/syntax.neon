services:

	# SIMPLE =====================================
	a1: TestClass

	a2:
		class: TestClass

	a3:
		factory: TestClass

	# OPTIONS ====================================
	b1:
		class: TestClass
		autowired: off

	b2:
		class: TestClass
		inject: on

	# ARGUMENTS ====================================
	c1a: TestClass2(1, 2)

	c1b:
		class: TestClass2
		arguments: [1, 2]

	c2a: TestClass2(1)

	c2b:
		class: TestClass2
		arguments: [a: 1]

	c3a: TestClass2(b: 2)

	c3b:
		class: TestClass2
		arguments: [b: 2]

	# TAGS =======================================
	d1:
		class: TestClass
		tags: [t1]
	d2:
		class: TestClass
		tags: [t1: foobar]

	# ARGUMENTS + PARAMETERS =====================
	e1:
		class: TestClass2
		parameters: [a]
		arguments: [%a%]

	e2:
		class: TestClass2
		parameters: [a: NULL, b: 1]
		arguments: [%a%, %b%]

	e3:
		class: TestClass2(%a%)
		parameters: [a]

	e4:
		class: TestClass2(b: %a%)
		parameters: [a]

	# IMPLEMENTS (INTERFACES) ====================
	f1:
		implement: ITestInterface

	f2:
		class: stdClass
		implement: ITestInterface

	f3a:
		implement: ITestInterface2
		arguments: [1, 2]

	f3b:
		implement: ITestInterface2
		arguments: [b: 2]

	f4a:
		implement: ITestInterface3
		parameters: [c]
		arguments: [%c%]

	f4b:
		implement: ITestInterface3
		parameters: [c]
		arguments: [1]

	f5s: TestClass2
	f5:
		factory: @f5s
		implement: ITestInterfaceGet

	f6s:
		class: TestClass
	f6:
		factory: @f6s
		implement: ITestInterface

	f7s:
		class: TestClass2
	f7:
		factory: @f7s
		implement: ITestInterface3
		parameters: [c: 1]
		arguments: [%c%]

	# REFERENCES =================================
	g1:
		class: TestClass2
		parameters: [a: NULL, b: NULL]
		arguments: [%a%, %b%]

	g2: @g1

	g3:
		factory: @g1
		arguments: [1]

	g4:
		factory: @g1
		parameters: [b]
		arguments: [b: %b%]

	g5a:
		class: stdClass
		factory: @g1::foo()

	g5b:
		class: stdClass
		factory: @g1::foo
		parameters: [bar]
		arguments: [%bar%]

	g5c:
		class: stdClass
		factory: @g1::foo(%bar%)
		parameters: [bar]

	g5d:
		class: stdClass
		factory: @g1(%bar1%)::foo(%bar2%)
		parameters: [bar1, bar2]

	# SETUP ======================================
	h1:
		class: stdClass
		setup:
			- $a(1)
			- [@self, $a](1)
			- @self::$a(1)
			- foo(1)
			- [@self, foo](1)
			- @self::foo(1)

	h2:
		class: stdClass
		setup:
			- "$service->hello(?)"(@h1)
			- "$service->hi(?)"(@container)
			- "My\\Tracy\\Bar::init(?)"(@self)

	h3:
		class: stdClass
		setup:
			- "$service->onSuccess[] = ?"([@h1, method])
			- "?->onSuccess[] = ?"(@h1, @h2)
